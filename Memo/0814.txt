0814

오늘을 탭!
과 자바의 구성에 대해 맛보기

인자값을 적어주면 그걸 받아서 사용해줘야함
함수에서 인자값이 적혀있으면 인자값의 자료형과 변수를 알고 받아준다

~In JAVA~
자바에서는!
ㄴ 인자값을 적어주면 그걸 받아서 사용해줘야함
ㄴ 함수에서 인자값이 적혀있으면 인자값의 자료형과 변수를 알고 받아준다
ㄴ 약간 전체적인 흐름을 생각하는 사고를 해얗ㄴ다?
ㄴ 원하는 내용을 작성(문법에 맞게 작성해서! 중괄호가 꼬이는게 없게)
ㄴ 중괄호는 진짜 중요! 중괄호의 범위와 tab의 라인을 맞춰주는게 중요하다!
ㄴ 함수는 내가 자주, 2~3번 쓰는 것들을 따로 재활용을 하기위해 만들어 놓는것(in javascript)

~JAVA~

객체지향프로그램이란?
ㄴ 어떠한 프로그램을 만드려고할때 필요한 객체에 대해
ㄴ 필요한 요소를 정의.생성 한다.메모리에!
ㄴ 그래서 객체지향프로그램이라는 것은 자바에서 제공하는 객체사용을 지향하며
ㄴ 필요한 객체를 사용하고 없는 것은 만들어서 프로그램을 만든다.
ㄴ 자바에선 안쓰면 가비지컬렉터가 알아서 청소해조
ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
~자바의 프로그램 구조~

식별자란?
ㄴ 이름!
ㄴ class이름, 변수명, method명 을 식별자라함
ㄴ 이 3개를 잘 만들 줄 알아야한다!
ㄴ 이름이 숫자로 시작하면 안된다!!@
ㄴ 이름에 공백도 넣으면 안됨 _ 로 이어야함
ㄴ '예약어' 는 쓸 수 없음(class, method, int, string) 같은 이미 있는 이름들

객체
ㄴ 추상적으로 정의하고 메모리내에 실제로 전재하고 실행되는 것
클래스
ㄴ 객체를 만드는 데 꼭 필요한 설계도면과 같은 것
ㄴ 만들고자 하는 객체를 디자인한 틀!
멤버
ㄴ 하나의 클래스 내에서 정의되는 상수, 변수, 메서드를 총칭함

보통 소문자로 시작하면 변수

()가 있다면 함수

변수명은 카멜기법으로 작성

~클래스 안의 메인함수~
main함수를 jvm이 호출하는거임
ㄴ 그래서 main함수를 고치면 안댐!
ㄴ jvm이 main함수를 호출 -> 함수끝 -> jvm으로 돌아감 -> 프로그램 끝
ㄴ 전역변수가 아니라 멤버변수 라고 부르나봄

자바를 공부한다면,
ㄴ 클래스를 만든다.
ㄴ 멤버변수(전역변수) 선언(초기화x)
ㄴ 메인함수에서는!
ㄴ 

메모리구조!
ㄴ 크게 3가지로 구분할 수 있음

- stack
ㄴ 퍼스트인 라스트아웃
ㄴ 스택에 뭐가 만들어지는가
ㄴ 가벼운 변수들이 만들어진다.(변수가 생기는 곳)
ㄴ 

- heap
ㄴ 힙에선 뭐가 만들어지냐
ㄴ 객체가 만들어지는 곳

- static
ㄴ 프로그램이 끝날때까지 딱하나! 임.
ㄴ 딱 한개 만들어지면 끝임
ㄴ 클래스 이름을 동반해서 만들어짐
ㄴ main함수가 만들어짐 static으로. 그럼 클래스명.main() 로 static에 만들어짐
ㄴ 공유개념

main이 없는 클래스를 만드는 경우가 많아짐
ㄴ 어떠한 프로그램을 만들때 역할을 나눠서 클래스를 만드는데  jvm은 main함수를 호출하기때문에 main함수를 가지고 있는 함수는 하나고 나머진 없음

단순한 프로그램이라도 클래스 많이만들어서 짜라!

기본자료형은 stack임
객체자료형은 heap
ㄴ 내가 만드 자료형
ㄴ Car c1 = new Car();
ㄴ c1은 stack, Car()는 heap Car()안에 만든 static String model은 static에 String comp는 Car()안에
ㄴ new를 쓰면 새로 만들었다는것임 기억!!@
ㄴ 그니까 static(공유share)의 것들을 함수에 쓰고 그 함수는 c1이라는 변수에 저장된다는 뜻임
ㄴ 
