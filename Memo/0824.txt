0824

반복문
ㄴ while(begin, end, step)과 for가 잇슴
ㄴ while은 증감식(step)의 위치가 중요함.
ㄴ 그래서 그냥 begin-end-step을 아예 다 작성하고 시작하는 것이 좋다.

for
ㄴ 기본구조는 노션에!
ㄴ 반복횟수가 명확한 경우에 많이 사용!
ㄴ while문은 반복횟수가 정확하지 않은 경우에 사용한다.(무한루프)->반복횟수를 딱히 정하지 않고 원하는조건까지 돌리다가 만족한 경우에 탈출~ 맘대로 커스텀하기 편하닉가
ㄴ for문이 반복횟수만 정해진다면 많이 사용
ㄴ 차례대로의 숫자를 더하거나 곱할때는 복잡하게 생각하지말고 차례대로 곱한 수를 다른 변수에 계속 담아서 담아진값과 다음 i값을 곱하는 그런 방식으로 생각하자!
ㄴ 너무 어렵게 하지말자!
ㄴ 
/*
# 반복문 중첩 (loop nesting)
         
- 외부 반복문 내부에 내부 반복문이 존재하는 형태를 반복문 중첩이라고 합니다.
반복문 자체를 반복시켜야 할 경우에 중첩을 사용합니다.
         
- 내부 반복문이 종료가 되어도, 외부 반복문이 끝나지 않는다면 내부 반복문은 외부 반복문의 제어변수의 크기 및 범위까지 계속해서 반복 실행되게 됩니다.
*/

탈출문
ㄴ break, continue, return(함수용)
ㄴ 말그대로 탈출! 하는거임
ㄴ 프로그램을 강제로 종료시키는 역할
ㄴ break;
ㄴ switch문에서 사용했었다.
ㄴ if문에서 제일 많이 사용합니다.
ㄴ break처럼 하나의 단어만으로 한줄만 작성할 시에만 괄호를 생략해도 된다.
ㄴ 자기가 포함되어있는 괄호만 탈출한다.
ㄴ break하고싶은 부분에 outer:해서 원하는 범위로 탈출가능
ㄴ 이걸 레이블이라고함
ㄴ /*
- 내부 반복문에 포함된 break로 바깥쪽 반복문까지 한번에
종료시키고 싶다면 바깥쪽 반복문에 label을 붙입니다.
그리고, break 선언 시 label을 함께 선언합니다. 
*/
ㄴ/*


# 무한 루프
         
- 무한 루프는 반복 횟수를 정하지 않고 무한하게 반복문을
실행하는 구조입니다.
          
- 처음 반복문을 구성할 때, 개발자가 사전에 정확한 반복 횟수를 파악할 수 없다면, 무한루프를 일단 구성해 두고 특정 조건을 통해 종료할 수 있도록 코드를 설계합니다.
          
- 일반적으로 정확한 반복 횟수를 알고 있다면 for문을 사용하고, 정확한 반복 횟수를 모른다면 while을 통한 무한 루프를 형성하여 사용합니다. while(true), for(;;)
*/
ㄴ 사용자가 몇번만에 성공할지 모르는 경우 무한루프 사용
ㄴ while문을 많이쓴다.
ㄴ for문에서는 무한루프를 잘 돌리지 않음
ㄴ break가 포함되어있지 않은 무한루프는 미완성이다.

continue
ㄴ 그 반복 회차만 건너뛰는것
ㄴ continue가 되면 바로 step조건으로 간다.
ㄴ continue이하의 코드가 실행되지 않는다! 라고 생각하면된다.
ㄴ continue도 레이블을 사용할 수 있다.
ㄴ ㄱ래도 똑같이 step조건이 더해져서 다시 시작과 똑같음
ㄴ 이거는 for문의 경우임
ㄴ while문에서는 continue에 걸리면 조건식으로 간다. 왜냐면 증감식이 continue에 걸리지 않음.
ㄴ 무한루트에서는 그냥 다시 식이 시작됨

=> break는 반복문을 아예 없애는 것이고, continue는 그 회차만 넘기는것!

배열 기초
ㄴ 동종모음배열 : int배열을 선언하면 int만 들어올 수 있음
ㄴ 같은 타입의 데이터를 하나의 변수에 저장하는 자료구조!
ㄴ 순서대로 주루르르르르르륵~ 나열 되어있는 형태!
ㄴ 왜쓰냐 변수가 너무 작아서 배열을  씀
ㄴ 배열도객체긴함
ㄴ
#배열 (array)
-> 같은 데이터 타입의 값을 집합 형태로 나열하기 위한 자료형

1. 배열 변수의 선언
2. 배열 객체를 생성 - 실제 값들이 저장될 공간을 형성
생성할 때 배열의 크기를 정해 주셔야 합니다.
배열의 크기를 정함, 정하지 않으면 배열 생성이x
3. 배열의 초기화 - 배열 내부에 실제 값들을 저장.
배열의 초기화는 인덱스를 통해 수행합니다.
인덱스란 배열 내부의 위치를 지정할 수 있는 값입니다.
인덱스는 0번부터 시작하여 1씩 순차적으로 증가합니다.

for-each문(자바스크립트에서 for of문이라고 비슷한게잇)
ㄴ 


ctrl+a -> ctrl+i 하면 전체 이쁘게 정렬된다!진짜 짱이다
