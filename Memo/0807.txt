0807
css할때 만들었던 수평메뉴 수평나열 같은거 flex속성으로 수평지정가능
ul.container>li.item{항목$}*5 새삼혁명적
/*** flex개념 ***/
ㅡㅡㅡㅡㅡ부모요소ㅡㅡㅡㅡㅡ
display: flex;
            /* flex를 사용할땐 밖에 감싸주는 애를 container로 정해주고 안에 요소들을 item으로 지정하는게 보통
                그리고 flex-direction: row; 를 지정하면 수평정렬이 된다~
                row-reverse라는 기능도 있는데 오른쪽으로 밀고 숫자순서가 reverse된다(거울반전모드됨)
                수직정렬 -> flex-direction: column;
            */
            flex-direction: row; /* 기본값 : row, 자동 수평정렬 */
            /* flex-direction: row-reverse; */
            flex-wrap: nowrap; 
            /* 
                사이트 사이즈가 줄어들때 자동으로 container칸 안에서 li들이 존재하게 ul사이즈가 조절되는 기능 
                근데 메뉴 사이즈가 바뀌면 안될때는 nowrap으로 지정가능
            */
            justify-content: space-around; 
            /* 
                flex-start가 기본값임.
                flex-end 순서그대로+우측밀기
                center도 있음 (가운데정렬)
                space-between 양끝기준으로 균등분할해서 li배치(li들끼리 공백이 생길 수 있음) 
                space-around 가운데li 기준으로 균등분할 (맨끝 li들이 끝에 딱 붙지 않을 가능성O)
            */
ㅡㅡㅡㅡㅡ자식요소ㅡㅡㅡㅡㅡ
flex-grow: 1; /* 자식 요소간의 비율 flex: 1; 이랑 똑같음! 1칸씩 차지하겠다는 의미 */
            flex-shrink: auto; /* 공간이 모자랄때 얼마만큼 줄일거야!를 입력해주면 알아서 줄여줌 그래서 auto를 주면 자동으로 칸조절 */

ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ

부모의크기보다 자식의 크기가 더 커도 부모에서 flex-wrap: nowrap;으로 설정해놓으면 부모요소에서 설정해놓은 크기 안에서 비율로 크기가 조정된다.
그걸 아래 로직에서 볼 수 있다.

.container {
            border: 1px solid green;
            width: 600px;
            display: flex;
            flex-wrap: nowrap; /* 기본값 */
        }
        .item {
            background-color: lightcoral;
            width: 300px;
            /* 부모의 nowrap설정으로 300px으로 설정된것들이
            200px로 변경된 모습을 볼 수 있다. */

        }
        .flex1 {
            background-color: lightblue;
            /* flex-grow: 1; 자동으로 크기 200px로 조정됨,
            flex-grow를 사용하기 위해서는 자식요소가 포함된 바로위 부모 요소에 지정된 width값이 없어야함*/
            flex-shrink: 1;
            /* 부모의 너비가 600에서 500으로 재설정 한 후
            width:300px이 있는 상태에서
            공간이 부족할 때 줄일 수 있는 비율
            남은 공간을 1:2:3의 비율로 줄여서 자리잡는다 */
        }
        .flex2 {
            background-color: lightgray;
            /* flex-grow: 2; 부모의 크기인 600px안에서 1:2:1 비율로 칸을차지하게된다 */
            flex-shrink: 2;
        }
        .flex3 {
            background-color: lightgoldenrodyellow;
            /* flex-grow: 1; */
            flex-shrink: 3; /* 공간이 부족할때 얼마의 비율로 줄일거냐 -> 더 많이 줄이고 싶은 자식요소에 더 큰 숫자를 부여 */
        }
ui user,interface 유저랑 서버간의 중개자/ 화면에 나타나는 모든것들?화면디자인
ㅡㅡㅡㅡㅡㅡㅡㅡㅡ
function의 인자로 받은 변수는 다른 함수에서 똑같이 써도 상관없다!
=> 이유는 그 함수의 지역변수! 이기 때문이다.
ㅡㅡㅡㅡㅡㅡㅡㅡㅡ
jQuery로 mouseover와 mouseout의 이벤트 함수를 사용할 수 있다
먼저 제이쿼리의 시작 $(function(){}); 작성해주고 함수기능을 부여해줄 아이디를 찾아 bind로 기능부여 -> 버튼을 눌렀을 때의 효과를 익명함수 안에 작성!
//제이쿼리로 작성하는 로직은 다 먼저 기능 부여해줄 태그 호출 -> 호출 후 익명함수에 기능부여! 또는 효과 작성! 이런 형식인듯
ㅡㅡㅡㅡㅡㅡㅡㅡㅡ
jQuery로 행추가 삭제에 대한 이벤트함수
추가는 rowIndex라는 속성이 있고
삭제는 deleteRow라는 속성이 있다
rowIndex는 table태그를 사용할때, row에 해당하는 엘리먼트에 적용할 수 있으며 해당하는 index값을 반환한다.
이때 두가지의 경우로 나뉘는것 같은데 첫번째는 애초에 테이블을 만들때, 행렬을 다 입력해준경우. 두번째는 행을 입력값을 받아 추가해주는 경우이다.



jQuery 함수 배운거
.find() 특정한 속성 검색해서 찾아 선택
.prop() : 속성 설정하는 함수
.next() : 바로 다음 태그 선택
제이쿼리를 통해 클래스 적용해제도 가능함!(addclass, removeclass)